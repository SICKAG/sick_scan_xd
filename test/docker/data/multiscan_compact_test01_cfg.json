{
  "info.config": [ 
    "# This file contains the configuration of a docker test for sick_scan_xd_simu.py. ", 
    "# sick_scan_xd_simu.py runs sick_scan_xd and a lidar simuation within a docker container. ",
    "# sick_scan_xd_simu.py simulates a lidar, starts sick_scan_xd, subscribes and verifies ",
    "# pointcloud, laserscan and optional imu messages against reference data. ",
    "# This file configures the testcase and specifies the start parameter for sick_scan_xd ",
    "# and lidar simulation, ros messages and reference data for sick_scan_xd verification. "
  ],

  "info.reference_messages_jsonfile": "# Json file with reference messages. Test passed, if all messages were published by sick_scan_xd. Test failed otherwise.",
  "reference_messages_jsonfile": "./src/sick_scan_xd/test/docker/data/multiscan_compact_test01_ref_messages.json",

  "info.save_messages_jsonfile": "# Optional json file to save sick_scan_xd messages. After verification, this file can be used as a reference for new testcases.",
  "save_messages_jsonfile": "",
  
  "info.report_md_filename": "# Filename of test report (md-file)",
  "report_md_filename": "sick_scan_xd_testreport.md",

  "info.sick_scan_xd_pointcloud_topics": "# List of pointcloud topics to subscribe. Messages received on these topics are verified against the reference given by reference_messages_jsonfile.",
  "sick_scan_xd_pointcloud_topics": [
    "/cloud_unstructured_segments",
    "/cloud_unstructured_fullframe",
    "/cloud_polar_unstructured_segments",
    "/cloud_polar_unstructured_fullframe",
    "/cloud_all_fields_fullframe"
  ],
  
  "info.sick_scan_xd_laserscan_topics": "# List of laserscan topics to subscribe. Messages received on these topics are verified against the reference given by reference_messages_jsonfile.",
  "sick_scan_xd_laserscan_topics": [
    "/multiScan/scan_segment",
    "/multiScan/scan_fullframe"
  ],
  
  "info.sick_scan_xd_imu_topics": "# Optional list of imu topics to subscribe. Messages received on these topics are verified against the reference given by reference_messages_jsonfile.",
  "sick_scan_xd_imu_topics": [
    "/multiScan/imu"
  ],
  
  "info.args_sick_scan_xd_launch": "# Launch parameter for sick_scan_xd",
  "args_sick_scan_xd_launch": [
    "sick_scan_xd sick_multiscan.launch hostname:=127.0.0.1 udp_receiver_ip:=127.0.0.1"
  ],
  
  "info.args_udp_scandata_sender": "# Launch parameter for udp scandata sender (multiScan or picoScan)",
  "args_udp_scandata_sender": [
    "./src/sick_scan_xd/test/python/multiscan_pcap_player.py --json_filename=./src/sick_scan_xd/test/docker/data/multiscan_compact_test01_udp_scandata.json --udp_port=2115 --repeat=2 --verbose=0"
  ],
  
  "info.args_sopas_server": "# Launch parameter for the sopas server simulating a lidar",
  "args_sopas_server": [
    "./src/sick_scan_xd/test/python/multiscan_sopas_test_server.py --tcp_port=2111 --cola_binary=0"
  ],
  
  "info.run_simu_seconds_before_shutdown": "# Delay before simulation shutdown: 0 for multiScan/picoScan (i.e. wait for udp scandata sender), simulation time in seconds otherwise (typically some seconds, e.g. 10)",
  "run_simu_seconds_before_shutdown": 0,
  
  "info.args_rviz": "# Optional config files for rviz visualization",
  "args_rviz": [
    "./src/sick_scan_xd/test/emulator/config/rviz_cfg_multiscan_emu.rviz",
    "./src/sick_scan_xd/test/emulator/config/rviz_cfg_multiscan_laserscan_360.rviz",
    "./src/sick_scan_xd/test/emulator/config/rviz_cfg_multiscan_emu_360.rviz"
  ],
  
  "info.args_shutdown_nodes": "# List of ros nodes to shutdown at exit, should be the ros node running sick_scan_xd",
  "args_shutdown_nodes": [
    "multiScan"
  ],
  
  "info.args_shutdown_server": "# List of processes to shutdown at exit, should be the sopas server simulating a lidar",
  "args_shutdown_server": [
    "multiscan_sopas_test_server.py"
  ]
}